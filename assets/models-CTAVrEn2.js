const a="";a.endsWith("/api")&&console.warn('VITE_API_BASE_URL should not include "/api"');async function c(){let e=[];try{const t=await fetch(`${a}/api/models`);if(!t.ok)throw new Error(`API request failed: ${t.status}`);e=await t.json()}catch(t){console.error("API error",t)}return!Array.isArray(e)||e.length,e}function r(e=!1){const t={},o=localStorage.getItem("jwt");return o&&(t.Authorization=`Bearer ${o}`),e&&(t["Content-Type"]="application/json"),t}async function i(e,t){const o=await fetch(`${a}/api/models/${encodeURIComponent(e)}`,{method:"PUT",headers:r(!0),body:JSON.stringify(t)});if(!o.ok){const s=(await o.json().catch(()=>({}))).error||(o.status===403?"Forbidden":"Update failed");throw new Error(s)}return o.json().catch(()=>({}))}async function d(e){const t=await fetch(`${a}/api/models/${encodeURIComponent(e)}`,{method:"DELETE",headers:r()});if(!t.ok){const n=(await t.json().catch(()=>({}))).error||(t.status===403?"Forbidden":"Delete failed");throw new Error(n)}return t.json().catch(()=>({}))}export{d as deleteModel,c as loadModels,i as updateModel};
